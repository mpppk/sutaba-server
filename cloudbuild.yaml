steps:
  - name: 'gcr.io/cloud-builders/go'
    id: 'go-mod-download'
    env: ['GO111MODULE=on', 'GOPATH=/go']
    args: ['mod', 'download']
    waitFor: ['-']
    volumes:
      - name: go-modules
        path: /go
  - name: 'gcr.io/cloud-builders/go:debian'
    env: ['GO111MODULE=on', 'GOPATH=/go']
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        apt-get install -y build-essential && make lint
    waitFor: ['go-mod-download']
    volumes:
      - name: go-modules
        path: /go
  - name: 'gcr.io/cloud-builders/go:debian'
    env: ['GO111MODULE=on', 'GOPATH=/go']
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        apt-get install -y build-essential && make test
    waitFor: ['go-mod-download']
    volumes:
      - name: go-modules
        path: /go
  - name: 'gcr.io/cloud-builders/docker'
    id: 'docker-pull'
    entrypoint: 'bash'
    waitFor: ['-']
    args:
      - '-c'
      - |
        docker pull asia.gcr.io/$PROJECT_ID/sutaba-server:master || exit 0
  - name: 'gcr.io/cloud-builders/docker'
    waitFor: ['docker-pull']
    args: [ 'build',
            '-t', 'asia.gcr.io/$PROJECT_ID/sutaba-server:$BRANCH_NAME', '.',
            '--cache-from', 'asia.gcr.io/$PROJECT_ID/sutaba-server:master',
    ]
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'asia.gcr.io/$PROJECT_ID/sutaba-server:$BRANCH_NAME']
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        if [ $BRANCH_NAME = "master" ]; then
          gcloud beta run deploy sutaba-staging-server \
          --image asia.gcr.io/sutaba/sutaba-server:master \
          --platform managed \
          --update-env-vars CLASSIFIER_SERVER_HOST=https://classifier-server-lkui2qyzba-an.a.run.app
        fi
